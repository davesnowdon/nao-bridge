name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      test_pypi:
        description: 'Publish to Test PyPI instead of PyPI'
        required: false
        default: false
        type: boolean

permissions:
  contents: write

jobs:
  build:
    name: Build distribution
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"
    
    - name: Install Hatch
      run: pip install hatch
    
    - name: Extract version
      id: version
      working-directory: ./clients/python
      run: |
        VERSION=$(hatch version)
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Building version: $VERSION"
    
    - name: Build package
      working-directory: ./clients/python
      run: hatch build
    
    - name: Check build artifacts
      working-directory: ./clients/python
      run: |
        ls -la dist/
        echo "Built files:"
        ls dist/
    
    - name: Upload distribution artifacts
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: clients/python/dist/
        retention-days: 7

  test:
    name: Test package
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"
    
    - name: Install Hatch
      run: pip install hatch
    
    - name: Download distribution artifacts
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: clients/python/dist/
    
    - name: Test installation from wheel
      working-directory: ./clients/python
      run: |
        python -m venv test-env
        source test-env/bin/activate
        pip install dist/*.whl
        python -c "import nao_bridge_client; print(f'Successfully imported version: {nao_bridge_client.__version__}')"
    
    - name: Run tests (if they exist)
      working-directory: ./clients/python
      run: |
        if [ -d "tests" ]; then
          echo "Running tests..."
          hatch run test
        else
          echo "No tests directory found, skipping tests"
        fi

  publish-to-testpypi:
    name: Publish to TestPyPI
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.test_pypi == 'true'
    needs: [build, test]
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/nao-bridge-client
    
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    
    steps:
    - name: Download distribution artifacts
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: clients/python/dist/
    
    - name: Publish to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        packages-dir: clients/python/dist/
        print-hash: true

  publish-to-pypi:
    name: Publish to PyPI
    if: github.event_name == 'release' && github.event.action == 'published'
    needs: [build, test]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/nao-bridge-client
    
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
      contents: write
    
    steps:
    - name: Download distribution artifacts
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: clients/python/dist/
    
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        packages-dir: clients/python/dist/
        print-hash: true

    - name: Update GitHub release with PyPI info
      uses: actions/github-script@v6
      with:
        script: |
          const version = "${{ needs.build.outputs.version }}";
            
          // Get the current release
          const release = await github.rest.repos.getRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            release_id: context.payload.release.id
          });
            
          // Append PyPI info to the release body
          const pypiInfo = `\n\n---\n\nðŸŽ‰ **Published to PyPI!**\n\nInstall with:\n\`\`\`bash\npip install nao-bridge-client==${version}\n\`\`\``;
            
          const updatedBody = (release.data.body || '') + pypiInfo;
            
          // Update the release
          await github.rest.repos.updateRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            release_id: context.payload.release.id,
            body: updatedBody
          });

  notify-failure:
    name: Notify on failure
    if: failure()
    needs: [build, test, publish-to-pypi, publish-to-testpypi]
    runs-on: ubuntu-latest
    
    steps:
    - name: Create issue on failure
      uses: actions/github-script@v6
      with:
        script: |
          const title = "PyPI Publication Failed";
          const body = `The PyPI publication workflow failed. Please check the [workflow run](${context.payload.repository.html_url}/actions/runs/${context.runId}) for details.`;
          
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: title,
            body: body,
            labels: ['bug', 'ci/cd']
          });